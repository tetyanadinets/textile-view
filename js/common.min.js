(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function Common() {
		_classCallCheck(this, Common);
	}

	_createClass(Common, [{
		key: 'init',
		value: function init() {
			this.scrollWindow();
			this.colorCtrl();
		}
	}, {
		key: 'scrollWindow',
		value: function scrollWindow() {
			$(window).scroll(function () {
				if ($(window).scrollTop() > 150) {
					$('body').addClass('scroll');
				} else {
					$('body').removeClass('scroll');
				}
			});
		}
	}, {
		key: 'scrollAnchors',
		value: function scrollAnchors(btn, offset, callback) {
			var hash = window.location.hash;
			var anhor = hash.replace(/#/, '');
			var reqElem = $('[data-anchor= "' + anhor + '"]');
			var anchorItem = $('.anchorItem');
			var topElem;

			if (reqElem.length) {
				topElem = reqElem.offset().top - offset;

				$('html, body').scrollTop(topElem);
			}

			if (!btn.length) return;

			$(btn).on('click', function (e) {
				e.preventDefault();

				var btn = $(this);

				if (this.tagName == 'A') {
					var hash = btn.attr('href');
					var anhor = hash.replace(/#/, '');
				} else {
					var anhor = btn.attr('data-link');
				};

				if (!reqElem.length) return;

				reqElem = $('[data-anchor= "' + anhor + '"]');
				topElem = reqElem.offset().top - offset;

				$('html, body').stop().animate({ 'scrollTop': topElem }, 1000, 'easeInOutCubic', function () {
					if (callback) {
						callback();
					}
				});
				window.location.hash = anhor;
			});

			$(window).scroll(function () {
				$('.header__nav a').removeClass('active');
				anchorItem.each(function (i, el) {
					var el = $(el);
					var scrollTop = $(window).scrollTop();
					var elementsHeight = el.height();
					var topElements = el.offset().top - (offset + 5);
					if (scrollTop > topElements && scrollTop < topElements + elementsHeight) {
						var reqElemData = el.data('anchor');
						$('a[href$="' + reqElemData + '"]').addClass('active');
					}
				});
			});
		}
	}, {
		key: 'colorCtrl',
		value: function colorCtrl() {
			$('.card__color').on('click', function (e) {
				e.preventDefault();
				$('.card__color').removeClass('active');
				$(this).addClass('active');
			});

			$('.card__color').on('mouseenter click', function (e) {
				var img = $(this).parents('.card').find('.card__img');
				var src = $(this).data('img');
				img.css('background-image', src);
			});

			$('.card__color').on('mouseleave', function (e) {
				var img = $(this).parents('.card').find('.card__img');
				var src = $('.card__color.active').data('img');
				img.css('background-image', src);
			});
		}
	}]);

	return Common;
}();

},{}],2:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function ValidForm(form) {
		_classCallCheck(this, ValidForm);

		this.form = $(form);
	}

	_createClass(ValidForm, [{
		key: 'init',
		value: function init() {
			this.start();
			this.events();
		}
	}, {
		key: 'start',
		value: function start() {
			var form = this.form;
			var input = form.find('.form-item input');
			var select = form.find('.form-item select');

			if (jQuery().inputmask) {
				var tel = $('input[type="tel"], .tel');
				if (tel.length == 0) return;
				tel.inputmask("+38 (999) (999 99 99)", {
					showMaskOnHover: false
				});
			}

			for (var i = 0; i < select.length; i++) {
				if (select[i].options[select[i].selectedIndex].text) {
					var parent = $(select[i]).closest('.form-item');
					parent.addClass('active');
				}
			};

			for (var i = 0; i < input.length; i++) {
				if (input[i].value) {
					$(input[i]).closest('.form-item').addClass('active');
				}
			};
		}
	}, {
		key: 'events',
		value: function events() {
			var form = this.form;
			var validItem = form.find('.valid');
			var self = this;

			form.on('click', '[type="submit"]', function (e) {
				var btn = $(this);
				var form = btn.closest('form');

				if (!self.validInput(form)) {
					e.preventDefault();
				} else {
					//	e.preventDefault();
					if (form.hasClass('ajax')) {
						self.sendAjax(form);
					} else {
						self.thankForm(form, function () {
							form.submit();
						});
					}
				}
			});

			form.on('focus', 'input, textarea', function () {
				$(this).closest('.valid').removeClass('error');
			});

			form.on('blur', 'input, textarea', self.checkLengthInput);

			this.checkSelect(form);
		}
	}, {
		key: 'checkLengthInput',
		value: function checkLengthInput() {
			var input = $(this);
			var parent = input.closest('.form-item');
			if (input.val().length > 0) {
				parent.addClass('active');
			} else {
				parent.removeClass('active');
			}
		}
	}, {
		key: 'checkSelect',
		value: function checkSelect(form) {
			var select = form.find('select');
			select.on('change', function (e) {
				var _this = $(this);
				var parent = _this.closest('.form-item, .filters__item');
				var val = _this.val();
				_this.closest('.valid').removeClass('error');
				if (val != 0) {
					parent.addClass('active');
				} else {
					parent.removeClass('active');
				}
			});

			select.on('focus', function (e) {
				$(this).closest('.form-item, .filters__item').addClass('open');
			});
			select.on('change', function (e) {
				$(this).closest('.form-item, .filters__item').removeClass('open');
			});
		}
	}, {
		key: 'sendAjax',
		value: function sendAjax(form) {
			var _this2 = this;

			var data = form.serialize();
			$.ajax({
				type: "POST",
				url: "mail.php",
				data: data,
				success: function success(e) {
					_this2.thankForm(form);
				}
			});
		}
	}, {
		key: 'thankForm',
		value: function thankForm(form, callBack) {
			var formThanks = $('.formThanks');
			if (!formThanks.length) return;

			formThanks.fadeIn();
			setTimeout(function () {
				formThanks.fadeOut(function () {
					form.fadeIn().find('.form-item').removeClass('active');
					form[0].reset();
					callBack();
					//	formTitle.fadeIn();
				});
			}, 3000);
		}
	}, {
		key: 'validInput',
		value: function validInput(form) {
			var formValid = form.find('.valid');
			var email = formValid.find('[type=email]');
			var bull = void 0;
			var textInError = '';

			bull = false;

			formValid.each(function (key) {
				var _this = $(formValid[key]);
				var formInput = _this.find('input');
				var formTextarea = _this.find('textarea');
				var select = _this.find('select');
				var formCheckbox = _this.find('[type="checkbox"]');

				checkForElem(formInput, function () {
					if (formInput.val().length < 1) {
						formInput.closest('.valid').addClass('error').removeClass('ok');
					} else {
						_this.closest('.valid').addClass('ok');
					};
				});
				checkForElem(formTextarea, function () {
					if (formTextarea.val().length < 1) {
						formTextarea.closest('.valid').addClass('error').removeClass('ok');
					} else {
						_this.closest('.valid').addClass('ok');
					};
				});
				checkForElem(select, function () {
					if (select.val() == 0) {
						select.closest('.valid').addClass('error').removeClass('ok');
					} else {
						_this.closest('.valid').addClass('ok');
					};
				});
				if (!formCheckbox.prop("checked")) {
					formCheckbox.closest('.valid').addClass('error').removeClass('ok');
				} else {
					_this.closest('.valid').removeClass('error').addClass('ok');
				};
			});

			//	проверка на email
			if (email.length && !this.isEmail(email) && email.val().length > 1) {
				var parent = email.closest('.valid');
				parent.addClass('error').removeClass('ok');
				textInError += 'E-mail не корректен';
			};

			function checkForElem(input, f) {
				if (!input.length) {} else {
					f();
				}
			};

			if (form.find('.error').length) {
				return bull = false;
			} else {
				return bull = true;
			}
		}
	}, {
		key: 'isEmail',
		value: function isEmail(email) {
			if (!email) return true;
			var valEmail = email.val();
			var reg = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;;

			return reg.test(valEmail);
		}
	}]);

	return ValidForm;
}();

},{}],3:[function(require,module,exports){
'use strict';

function libsActivate() {
	// swiper slider
	(function () {
		var heroSliderThumbs = new Swiper('.heroSlider', {
			slidesPerView: 1,
			effect: 'fade',
			autoplay: {
				delay: 5000,
				disableOnInteraction: false
			},
			pagination: {
				el: '.heroSlider .swiper-pagination',
				type: 'bullets',
				clickable: 'true'
			}
		});

		var doogsBestsellersThumbs = new Swiper('.doogsBestsellersSlider', {
			slidesPerView: 4,
			loop: true,
			spaceBetween: 20,
			navigation: {
				nextEl: '.doogs-bestsellers-slider .arr_next',
				prevEl: '.doogs-bestsellers-slider .arr_prev'
			}
		});

		var doogsNewThumbs = new Swiper('.doogsNewSlider', {
			slidesPerView: 4,
			loop: true,
			spaceBetween: 20,
			navigation: {
				nextEl: '.doogs-new-slider .arr_next',
				prevEl: '.doogs-new-slider .arr_prev'
			}
		});

		var doogsRatingThumbs = new Swiper('.doogsRatingSlider', {
			slidesPerView: 4,
			loop: true,
			spaceBetween: 20,
			navigation: {
				nextEl: '.doogs-rating-slider .arr_next',
				prevEl: '.doogs-rating-slider .arr_prev'
			}
		});
	})();
}

module.exports = libsActivate();

},{}],4:[function(require,module,exports){
'use strict';

var Preloader = require('./preloader.js');
var Common = require('./common.js');
var Popup = require('./popup.js');
var Nav = require('./nav.js');
var ValidForm = require('./form');

require('./form');
require('./libs-activate');

window.addEventListener('load', function () {
	svg4everybody({});

	var preloader = new Preloader();
	preloader.init();

	var sendForm = new ValidForm('.sendForm').init();

	var nav = new Nav().init();

	var popup = new Popup().events();
	var common = new Common().init();
	var scrollAnchors = new Common().scrollAnchors('.anchorBtn', 65, function () {
		$('body').removeClass('openNav');
	});
});

},{"./common.js":1,"./form":2,"./libs-activate":3,"./nav.js":5,"./popup.js":6,"./preloader.js":7}],5:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function Nav() {
		_classCallCheck(this, Nav);

		this.body = $('body');
		this.hamburger = $('#hamburger');
		this.headerNav = $('.headerNav');
	}

	_createClass(Nav, [{
		key: 'init',
		value: function init() {
			this.events();
		}
	}, {
		key: 'events',
		value: function events() {
			var _this = this;

			this.hamburger.on('click', function () {
				if (_this.body.hasClass('openNav')) {
					_this.closeNav();
				} else {
					_this.openNav();
				}
			});

			// this.headerNav.on('click', '.popupBtn', ()=> {
			// 	this.closeNav()
			// })		
		}
	}, {
		key: 'openNav',
		value: function openNav() {
			var _this2 = this;

			var openPromise = new Promise(function (resolve, regect) {
				_this2.body.addClass('openNav');
				setTimeout(resolve, 0);
			});

			openPromise.then(function () {
				_this2.headerNav.addClass('openNav');
			});
		}
	}, {
		key: 'closeNav',
		value: function closeNav() {
			var _this3 = this;

			var closePromise = new Promise(function (resolve, regect) {
				_this3.headerNav.removeClass('openNav');
				setTimeout(resolve, 300);
			});
			closePromise.then(function () {
				_this3.body.removeClass('openNav');
			});
		}
	}]);

	return Nav;
}();

},{}],6:[function(require,module,exports){
'use strict';

// popup windows

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function GetPopup() {
		_classCallCheck(this, GetPopup);

		this.$ = jQuery;
		this.popupBtn = $('.popupBtn');
		this.popup = $('.popup');
		this.hash = window.location.hash;

		this.openPopup(this.hash);
	}

	_createClass(GetPopup, [{
		key: 'events',
		value: function events() {
			var _this = this;

			var that = this;

			this.popupBtn.on('click', function (e) {
				e.preventDefault();
				var href = this.getAttribute('href');
				that.openPopup(href);
			});

			this.popup.on('click', '.close, .anchorBtn', function (e) {
				e.preventDefault();
				_this.closePopup();
			});

			document.addEventListener('keydown', function (e) {
				if (e.keyCode === 27) {
					_this.closePopup();
				}
			});
		}
	}, {
		key: 'openPopup',
		value: function openPopup(href) {
			var popup = $(href);

			if (this.popup.hasClass('show_popap')) {
				popup = $('.show_popap');
			};

			if (!popup.length) return;

			document.body.classList.add('hidden');
			setTimeout(function () {
				popup.addClass('show_popup');
			}, 100);
		}
	}, {
		key: 'closePopup',
		value: function closePopup() {
			var loc = window.location;

			this.popup.removeClass('show_popup');
			setTimeout(function () {
				document.body.classList.remove('hidden');
			}, 300);

			history.pushState('', '', loc.pathname + loc.search);
		}
	}]);

	return GetPopup;
}();

},{}],7:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
	function Preloader(loader) {
		_classCallCheck(this, Preloader);

		this.loader = document.querySelector('#preloader');
	}

	_createClass(Preloader, [{
		key: 'init',
		value: function init() {
			var _this = this;

			document.body.classList.add('show');

			if (!this.loader) return;

			this.loader.classList.add('hide');

			setTimeout(function () {
				if (_this.loader.remove) {
					_this.loader.remove();
				};
				_this.loader.classList.add('remove');
			}, 2000);
		}
	}]);

	return Preloader;
}();

},{}]},{},[4]);

//# sourceMappingURL=main.js.map
